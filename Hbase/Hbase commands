Hadoop Random Access Databases

Applications such as HBase, Cassandra, couchDB, Dynamo, and MongoDB are some of the databases that store huge amounts of data and access the data in a random manner.

What is HBase?

HBase is a distributed column-oriented database built on top of the Hadoop file system. It is an open-source project and is horizontally scalable.
HBase is a data model that is similar to Googleâ€™s big table designed to provide quick random access to huge amounts of structured data. It leverages the fault tolerance provided by the Hadoop File System (HDFS).
It is a part of the Hadoop ecosystem that provides random real-time read/write access to data in the Hadoop File System.

Storage Mechanism in HBase

    Table is a collection of rows.
    Row is a collection of column families.
    Column family is a collection of columns.
    Column is a collection of key value pairs.


HBase and HDFS
HDFS 	HBase
HDFS is a distributed file system suitable for storing large files. 	HBase is a database built on top of the HDFS.
HDFS does not support fast individual record lookups. 	HBase provides fast lookups for larger tables.
It provides high latency batch processing; no concept of batch processing. 	It provides low latency access to single rows from billions of records (Random access).
It provides only sequential access of data. 	HBase internally uses Hash tables and provides random access, and it stores the data in indexed HDFS files for faster lookups.

hbase shell
status
version
create 'creditcarddata','customerdata','personaldata'
list
disable 'creditcarddata'
enable 'creditcarddata'
scan 'creditcarddata'
is_disabled 'creditcarddata'
is_enabled 'creditcarddata'
disable_all 'r.*'
describe 'creditcarddata'
alter 'creditcarddata', READONLY
alter 'creditcarddata','www'
alter 'orders','delete'â‡’'student'
exists 'creditcarddata'
drop 'creditcarddata'
count 'creditcarddata'
truncate 'creditcarddata'
put 'creditcarddata',1,'customerdata:firstname','nandha'
put 'creditcarddata',2,'customerdata:firstname','lalitha'
put 'creditcarddata',1,'customerdata:lastname','gopal'
put 'creditcarddata',2,'customerdata:lastname','priya'
put 'creditcarddata',1,'customerdata:city','chennai'
put 'creditcarddata',2,'customerdata:country','india'
put 'creditcarddata',1,'customerdata:city','hyderabad'
put 'creditcarddata',2,'customerdata:country','india'

put 'creditcarddata',1,'personaldata:salary','5000'
put 'creditcarddata',2,'personaldata:salary','7000'
put 'creditcarddata',1,'personaldata:loanammount','3000'
put 'creditcarddata',2,'personaldata:loanammount','6000'
put 'creditcarddata',1,'personaldata:loadexpirydate','01-MAY-2018'
put 'creditcarddata',2,'personaldata:loadexpirydate','01-JUN-2018'
put 'creditcarddata',1,'personaldata:intrate','10'
put 'creditcarddata',2,'personaldata:intrate','40'

get 'creditcarddata',2,

delete 'creditcarddata',1,'personaldata:salary'
deleteall 'creditcarddata',1

=================

sqoop import --connect jdbc:mysql://quickstart.cloudera:3306/retail_db --username root --password cloudera --table orders --columns "order_id,order_date,order_status" --hbase-table orders --column-family student --hbase-row-key order_id -m 1;


